version: '3.7'

services:
  openrem:
    container_name: openrem
    restart: unless-stopped
    image: openrem/openrem:develop
    command: gunicorn openremproject.wsgi:application --bind 0.0.0.0:8000 --timeout 300
    volumes:
      - media_volume:/home/app/openrem/mediafiles
      - static_volume:/home/app/openrem/staticfiles
      - migrations_volume:/home/app/openrem/remapp/migrations
      - type: bind
        source: ./imports
        target: /imports
      - type: bind
        source: ./logs
        target: /logs
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - broker

  worker:
    restart: unless-stopped
    image: openrem/openrem:develop
    command: celery worker -A openremproject -Q default --logfile=/logs/celery.log
    volumes:
      - media_volume:/home/app/openrem/mediafiles
      - type: bind
        source: ./logs
        target: /logs
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - broker

  flower:
    restart: unless-stopped
    image: openrem/openrem:develop
    command: celery flower -A openremproject
    volumes:
      - type: bind
        source: ./logs
        target: /logs
    expose:
      - 5555
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - broker

  db:
    container_name: openrem-db
    restart: unless-stopped
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - type: bind
        source: ./db_backup
        target: /db_backup
    env_file:
      - ./.env.prod

  nginx:
    container_name: openrem-nginx
    restart: unless-stopped
    image: nginx:1.17.8-alpine
    volumes:
      - media_volume:/home/app/openrem/mediafiles
      - static_volume:/home/app/openrem/staticfiles
      - type: bind
        source: ./nginx-conf/conf.d
        target: /etc/nginx/conf.d
      - type: bind
        source: ./nginx-conf/certs
        target: /etc/ssl/private
    ports:
      - 80:80
    depends_on:
      - openrem

  broker:
    restart: unless-stopped
    image: rabbitmq:3-management-alpine

  orthanc_1:
    container_name: openrem-orthanc-1
    restart: unless-stopped
    image: openrem/orthanc
    volumes:
      - type: bind
        source: ./imports
        target: /imports
      - type: bind
        source: ./orthanc
        target: /etc/share/orthanc/scripts/
    ports:
#      - 8042:8042
      - 104:104
    environment:
      MANUFACTURERS_TO_IGNORE: "{}"
      MODEL_NAMES_TO_IGNORE: "{}"
      STATION_NAMES_TO_IGNORE: "{}"
      SOFTWARE_VERSIONS_TO_IGNORE: "{}"
      DEVICE_SERIAL_NUMBERS_TO_IGNORE: "{}"
      USE_TOSHIBA_CT_EXTRACTOR: "true"
      TOSHIBA_EXTRACTOR_SYSTEMS: |
        {{'Toshiba', 'Aquilion'}, {'GE Medical Systems', 'Discovery STE'},}
      USE_PHYSICS_FILTERING: "true"
      PHYSICS_TO_KEEP: "{'physics',}"
    secrets:
      - orthanc_1.json

secrets:
  orthanc_1.json:
    file: orthanc_1.json

volumes:
  postgres_data:
  media_volume:
  static_volume:
  migrations_volume:
